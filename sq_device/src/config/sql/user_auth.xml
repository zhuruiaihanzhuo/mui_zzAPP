<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User_auth">

  <resultMap id="users" type="bean.user_auth.Users">
    <result property="id" column="id" />
    <result property="username" column="username" jdbcType="VARCHAR"/>
    <result property="name" column="name" jdbcType="VARCHAR"/>

    <result property="password" column="password" jdbcType="VARCHAR"/>
    <result property="bumen" column="bumen" jdbcType="VARCHAR"/>
    <result property="createtime" column="createtime" jdbcType="TIMESTAMP" />
     <result property="lururen" column="lururen" jdbcType="VARCHAR" />
 	 <result property="gro" column="gro" jdbcType="VARCHAR"/>
</resultMap>

<resultMap type="bean.user_auth.Roles" id="RoleMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <collection property="children" column="id" javaType="list" select="selectAllpermissions"></collection>
</resultMap>

<resultMap type="bean.user_auth.Permissions" id="PermissionsMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    
</resultMap>
<resultMap type="bean.user_auth.Auth" id="AuthMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    
</resultMap>
<resultMap type="bean.user_auth.Grou" id="GrouMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    
</resultMap>

<select id="selectAllpermissions" resultType="bean.user_auth.Permissions" parameterType="java.lang.Integer">
    select id, href,text  from permissions where id in (select roles_permissions.permission_id from roles_permissions where roles_permissions.role_id=#{id})
</select>

<select id="selectAllRoles" resultMap="RoleMap" parameterType="java.lang.Integer">
    select id, text from roles where id in (select users_roles.role_id from users_roles where users_roles.user_id=#{id})
</select>

<select id="findUsersByName" parameterType="String" resultMap="users">
    select id,username,password,createtime,bumen,lururen,gro from    users where username=#{username}
</select>

<select id="select"  parameterType="bean.user_auth.Users" resultMap="users">
    SELECT * FROM users WHERE username=#{username} and password=#{password}
  
  </select>
  <select id="selectGroup"  parameterType="String" resultMap="GrouMap">
    SELECT * FROM grou where grou=#{g}
  
  </select>
  
<select id="selectAll"  parameterType="bean.user_auth.Users" resultMap="users">
    SELECT * FROM users 
  
  </select>




  
<select id="selectPermissions"     resultMap="PermissionsMap">
   select *  from Permissions
  </select>
  
  <select id="selectDeviceByshebeibianhao"   parameterType="String"  resultMap="PermissionsMap">
    select * from  device where shebeibianhao=#{shebeibianhao}
   
  </select>
  <select id="selectAuthByUser"   parameterType="String"  resultMap="PermissionsMap">
     select id, text from roles where id in (select users_roles.role_id from users_roles where users_roles.user_id=#{user_id})
   
  </select>
 <select id="checkAuth"   parameterType="bean.user_auth.Auth"  resultMap="PermissionsMap">
     select * from roles where id in (select users_roles.role_id from users_roles where users_roles.user_id=#{user_id} and users_roles.role_id=#{role_id})
   
  </select> 
  


  <insert id="PermissionsAdd" parameterType="bean.user_auth.Permissions" useGeneratedKeys="false">
    INSERT INTO  Permissions
    ( 
    text,
    href
    )
    VALUES
    ( 
    #{text},
    #{href}
    )
  </insert>
    <insert id="AuthAdd" parameterType="bean.user_auth.Auth" useGeneratedKeys="false">
    INSERT INTO  users_roles
    ( 
    user_id,
    role_id,
    creater,
    time
    )
    VALUES
    ( 
    #{user_id},
    #{role_id},
    #{creater},
    #{time}
    )
  </insert>
  
  
 <update id="update" parameterType="bean.user_auth.Users" >
    UPDATE users SET
   
    password = #{password}
   
    WHERE
    username= #{username}
  </update>
  <insert id="add" parameterType="bean.user_auth.Users" useGeneratedKeys="false">
    INSERT INTO Users
    ( 
    username,
    password,
    name,
    lururen,
    gro,
    createtime,
    bumen
 
    )
    VALUES
    ( 
    #{username},
    #{password},
    #{name},
    #{lururen},
    #{gro},
    #{createtime},
    #{bumen}
 
    )
  </insert>
 
  
  
<!--   <update id="update" parameterType="UserAlias">
    UPDATE user SET
    username = #{username,jdbcType=VARCHAR},
    password = #{password.encrypted,jdbcType=VARCHAR},
    administrator = #{administrator,jdbcType=BOOLEAN}
    WHERE
    id = #{id,jdbcType=INTEGER}
  </update>

    Unique constraint check
  <select id="isUniqueUsername" parameterType="map" resultType="boolean">
    SELECT (count(*) = 0)
    FROM user
    WHERE ((#{userId,jdbcType=BIGINT} IS NOT NULL AND id != #{userId,jdbcType=BIGINT}) OR #{userId,jdbcType=BIGINT} IS
    NULL)  other than me
    AND (username = #{username,jdbcType=VARCHAR})
  </select>  -->
</mapper>
