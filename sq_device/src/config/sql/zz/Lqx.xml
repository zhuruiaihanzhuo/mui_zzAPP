<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Lqx">

  <resultMap type="bean.zz.Lqx" id="LqxResult">
  <id column="id" jdbcType="INTEGER" property="id"/>
  
    <!--  <result column="device_id"  property="device_id"/> -->
      <!-- <result column="jiancharen" jdbcType="VARCHAR" property="jiancharen"/>
    <result column="bumen" jdbcType="VARCHAR" property="bumen"/>
    <result column="shebeibianhao" jdbcType="VARCHAR" property="shebeibianhao"/>
     <result column="shuliang" jdbcType="VARCHAR" property="shuliang"/>
    <result column="beizhu" jdbcType="VARCHAR" property="beizhu"/>
     <result column="date" jdbcType="TIMESTAMP" property="date"/> -->
  </resultMap>

   <select id="queryB"  parameterType="String"   resultMap="LqxResult">
    SELECT * FROM lqx WHERE (stateL='班长审批' and principalL=#{user})or(stateL='巡检审批' AND qcL=#{user})or( stateL='质控审批' and qc_real=#{user})  
   
  </select>
  
  <select id="queryH"  parameterType="String"   resultMap="LqxResult">
    SELECT * FROM lqx where proposerL=#{user} and (stateL like "完结%"  or stateL like "未通过%")
   
  </select>
  
  <select id="queryBM"  parameterType="String"   resultMap="LqxResult">
    SELECT * FROM lqx where departmentL=#{depar} <!-- and (stateL like "完结%"  or stateL like "未通过%") -->
   
  </select>
  <select id="queryZK"  parameterType="String"   resultMap="LqxResult">
    SELECT * FROM lqx<!--  where  stateL like "完结%"  or stateL like "未通过%" -->
   
  </select>
  
  
   <select id="queryYSQ"  parameterType="String"   resultMap="LqxResult">
   SELECT * FROM lqx WHERE proposerL=#{user} AND   not( stateL like "完结%"  or stateL like "未通过%")
  </select>
 
  
  
  
  
  <insert id="add" parameterType="bean.zz.Lqx" useGeneratedKeys="false">
    INSERT INTO lqx
    ( 
   			proposerL,propNum,groupL,principalL,qcL,departmentL,descriptionL,stateL,
			supplierL,itemNameL,itemNumL,lotL,urlString,sortL,sortNum,qc_real,sort_real,
			apTime,qc_resu,princ_resu,qr_resu,qcTime,prTime,qrTime
    )
    VALUES
    ( 
    #{proposerL},#{propNum},#{groupL},#{principalL},#{qcL},#{departmentL},#{descriptionL},#{stateL},
    #{supplierL},#{itemNameL},#{itemNumL},#{lotL},#{urlString},#{sortL},#{sortNum},#{qc_real},#{sort_real},
    #{apTime},#{qc_resu},#{princ_resu},#{qr_resu},#{qcTime},#{prTime},#{qrTime}
    )
  </insert>
   <update id="updatePrin" parameterType="bean.zz.Lqx" >
  UPDATE lqx SET
    princ_resu = #{princ_resu},
    stateL = #{stateL},
   prDescr = #{prDescr},
   prTime = #{prTime}   
    WHERE
    propNum = #{propNum}
  </update>
   <update id="updateQc" parameterType="bean.zz.Lqx" >
  UPDATE lqx SET
    sortL = #{sortL},
    qc_resu = #{qc_resu},
    stateL = #{stateL},
    qc_real=#{qc_real},
   qcDescr = #{qcDescr},
   qcTime = #{qcTime}
   
    WHERE
    propNum = #{propNum}
  </update>
  
    <update id="updateQr" parameterType="bean.zz.Lqx" >
  UPDATE lqx SET
    qr_resu = #{qr_resu},
    stateL = #{stateL},
   qrDescr = #{qrDescr},
   sort_real=#{sort_real},
   qrTime = #{qrTime}
   
    WHERE
    propNum = #{propNum}
  </update>
  

<!--   <update id="update" parameterType="UserAlias">
    UPDATE user SET
    username = #{username,jdbcType=VARCHAR},
    password = #{password.encrypted,jdbcType=VARCHAR},
    administrator = #{administrator,jdbcType=BOOLEAN}
    WHERE
    id = #{id,jdbcType=INTEGER}
  </update>

    Unique constraint check
  <select id="isUniqueUsername" parameterType="map" resultType="boolean">
    SELECT (count(*) = 0)
    FROM user
    WHERE ((#{userId,jdbcType=BIGINT} IS NOT NULL AND id != #{userId,jdbcType=BIGINT}) OR #{userId,jdbcType=BIGINT} IS
    NULL)  other than me
    AND (username = #{username,jdbcType=VARCHAR})
  </select>  -->
</mapper>
